bool a[8][8];
void updateArray(int n) {
  switch (n) {
    case 126:{
      bool b[8][8] = {
      {0,0,0,1,1,0,0,0},
      {0,0,0,0,1,1,0,0},
      {0,0,0,0,0,1,1,0},
      {1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1},
      {0,0,0,0,0,1,1,0},
      {0,0,0,0,1,1,0,0},
      {0,0,0,1,1,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 48:{
    bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,1,1,0},
      {0,1,0,1,1,0,1,0},
      {0,1,1,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 49:{
      bool b[8][8] = {
      {0,0,0,1,0,0,0,0},
      {0,0,1,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,1,1,1,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 50:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,0,0,0,0,0,1,0},
      {0,0,0,0,1,1,0,0},
      {0,0,1,1,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,1,1,1,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }case 51:{
      bool b[8][8] = {
      {0,0,0,1,0,0,0,0},
      {1,1,1,1,1,1,1,0},
      {0,1,0,1,0,1,0,0},
      {0,1,1,1,1,1,0,0},
      {0,1,0,1,0,1,0,0},
      {0,0,1,1,1,0,0,0},
      {1,1,0,1,0,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 52:{
      bool b[8][8] = {
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {1,1,1,1,1,1,1,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,1,0,1,0,0,0},
      {1,1,0,0,0,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 53:{
      bool b[8][8] = {
      {0,1,1,0,0,0,1,0},
      {0,1,1,1,1,0,1,0},
      {1,0,1,0,1,0,1,0},
      {0,1,1,1,1,0,1,0},
      {0,0,1,0,0,0,1,0},
      {1,1,1,1,1,0,1,0},
      {1,0,1,0,1,0,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 54:{
      bool b[8][8] = {
      {0,0,1,0,1,0,0,0},
      {0,1,0,0,1,1,1,0},
      {1,1,0,1,1,0,0,0},
      {0,1,0,0,1,1,1,0},
      {0,1,0,0,1,0,0,0},
      {0,1,0,0,1,1,1,0},
      {0,1,0,0,1,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 55:{
      bool b[8][8] = {
      {0,1,1,1,1,1,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,1,1,1,1,1,0},
      {0,1,0,1,0,1,0,0},
      {0,1,1,1,1,1,1,0},
      {0,1,1,0,1,0,0,0},
      {1,0,1,1,0,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 57:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,1,0},
      {0,0,0,0,0,0,1,0},
      {0,0,0,0,0,1,0,0},
      {0,0,1,1,1,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 65:{
      bool b[8][8] = {
      {0,0,0,1,0,0,0,0},
      {0,0,1,0,1,0,0,0},
      {0,0,1,0,1,0,0,0},
      {0,1,0,0,0,1,0,0},
      {0,1,1,1,1,1,1,0},
      {1,0,0,0,0,0,0,0},
      {1,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 67:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 69:{
      bool b[8][8] = {
      {0,1,1,1,1,1,1,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,1,1,1,1,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,1,1,1,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 71:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,1,1,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 73:{
      bool b[8][8] = {
      {0,0,1,1,1,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,1,1,1,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 75:{
      bool b[8][8] = {
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,1,0,0},
      {0,1,0,0,1,0,0,0},
      {0,1,0,1,0,0,0,0},
      {0,1,1,0,1,0,0,0},
      {0,1,0,0,0,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 76:{
      bool b[8][8] = {
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,1,1,1,1,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 77:{
      bool b[8][8] = {
      {1,0,0,0,0,0,1,0},
      {1,1,0,0,0,1,1,0},
      {1,0,1,0,1,0,1,0},
      {1,0,1,0,1,0,1,0},
      {1,0,0,1,0,0,1,0},
      {1,0,0,1,0,0,1,0},
      {1,0,0,0,0,0,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 78:{
      bool b[8][8] = {
      {0,1,0,0,0,0,1,0},
      {0,1,1,0,0,0,1,0},
      {0,1,0,1,0,0,1,0},
      {0,1,0,0,1,0,1,0},
      {0,1,0,0,0,1,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 79:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 80:{
      bool b[8][8] = {
      {0,1,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,1,1,1,1,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 82:{
      bool b[8][8] = {
      {0,1,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,1,1,1,1,0,0},
      {0,1,0,0,1,0,0,0},
      {0,1,0,0,0,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 83:{
      bool b[8][8] = {
      {0,0,1,1,1,1,0,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,0,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 84:{
      bool b[8][8] = {
      {1,1,1,1,1,1,1,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 85:{
      bool b[8][8] = {
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,1,0,0,0,0,1,0},
      {0,0,1,1,1,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 86:{
      bool b[8][8] = {
      {1,0,0,0,0,0,1,0},
      {1,0,0,0,0,0,1,0},
      {0,1,0,0,0,1,0,0},
      {0,1,0,0,0,1,0,0},
      {0,0,1,0,1,0,0,0},
      {0,0,1,0,1,0,0,0},
      {0,0,0,1,0,0,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }
    case 87:{
      bool b[8][8] = {
      {1,0,0,0,0,0,1,0},
      {1,0,0,1,0,0,1,0},
      {1,0,0,1,0,0,1,0},
      {1,0,1,0,1,0,1,0},
      {1,0,1,0,1,0,1,0},
      {0,1,0,0,0,1,0,0},
      {0,1,0,0,0,1,0,0},
      {0,0,0,0,0,0,0,0}
      };
      memcpy(a, b, sizeof(b));
      break;
    }

    case 97:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{0,1,1,1,1,1,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,1,1,1,0,0},
{0,1,1,0,1,0,1,0},
{1,0,1,1,0,0,1,0},
{0,1,1,0,0,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 98:{
      bool b[8][8] = {
{0,0,0,0,0,0,0,0},
{1,0,0,0,1,0,0,0},
{1,0,0,0,0,1,0,0},
{1,0,0,0,0,0,1,0},
{1,0,0,0,0,0,1,0},
{0,1,0,1,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 99:{
      bool b[8][8] = {
{0,0,1,1,1,1,0,0},
{0,0,0,0,0,0,0,0},
{0,0,1,1,1,1,0,0},
{0,1,0,0,0,0,1,0},
{0,0,0,0,0,0,1,0},
{0,0,0,0,0,1,0,0},
{0,0,1,1,1,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 100: {
      bool b[8][8] = {
{0,0,1,1,1,1,0,0},
{0,0,0,0,0,0,0,0},
{0,1,1,1,1,1,0,0},
{0,0,0,0,1,0,0,0},
{0,0,0,1,1,0,0,0},
{0,0,1,0,1,0,0,0},
{0,1,0,0,0,1,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 101:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{1,1,1,1,0,1,0,0},
{0,0,1,0,0,0,1,0},
{0,0,1,1,1,1,0,0},
{0,1,1,0,0,0,1,0},
{1,0,1,0,0,0,1,0},
{0,1,1,0,1,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 102:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{1,1,1,1,0,1,0,0},
{0,0,1,0,1,0,1,0},
{0,1,0,0,1,0,1,0},
{0,1,0,0,1,0,0,0},
{1,0,1,1,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 103:{
      bool b[8][8] = {
{0,0,1,0,1,0,1,0},
{0,0,1,0,0,0,0,0},
{1,1,1,1,0,1,0,0},
{0,0,1,0,1,0,1,0},
{0,1,0,0,1,0,1,0},
{0,1,0,0,1,0,0,0},
{1,0,1,1,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 104:{
      bool b[8][8] = {
{0,0,0,0,0,1,0,0},
{0,0,0,0,1,0,0,0},
{0,0,1,1,0,0,0,0},
{0,1,0,0,0,0,0,0},
{0,0,1,1,0,0,0,0},
{0,0,0,0,1,0,0,0},
{0,0,0,0,0,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 105:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,1,0},
{0,0,0,1,1,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 106:{
      bool b[8][8] = {
{0,0,0,0,1,0,1,0},
{1,1,1,1,1,1,1,0},
{0,0,0,1,1,0,0,0},
{0,0,1,0,1,0,0,0},
{0,0,0,1,1,0,0,0},
{0,0,0,0,1,0,0,0},
{0,0,0,1,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 107:{
      bool b[8][8] = {
{0,0,1,0,1,0,1,0},
{1,1,1,1,0,0,0,0},
{0,0,1,0,1,1,1,0},
{0,1,0,0,0,0,0,0},
{0,1,0,0,1,0,0,0},
{0,1,0,1,0,0,0,0},
{1,0,0,0,1,1,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 108:{
      bool b[8][8] = {
{0,0,0,0,1,0,0,0},
{0,1,1,1,1,1,1,0},
{0,0,0,1,0,0,0,0},
{0,0,0,1,1,1,0,0},
{0,0,1,0,0,0,1,0},
{0,0,0,0,0,0,1,0},
{0,0,0,1,1,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 109:{
      bool b[8][8] = {
{0,0,0,0,1,1,1,0},
{0,1,1,1,0,1,0,0},
{0,0,0,0,1,0,1,0},
{0,0,0,1,0,0,0,0},
{0,0,0,1,0,0,0,0},
{0,0,0,0,1,0,0,0},
{0,0,0,0,0,1,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 110:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,1,0,0},
{0,0,0,1,1,0,0,0},
{0,0,1,0,0,0,0,0},
{0,1,0,0,0,0,0,0},
{0,0,1,1,1,1,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 111:{
      bool b[8][8] = {
{0,0,1,0,1,0,1,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,1,0,0},
{0,0,0,1,1,0,0,0},
{0,0,1,0,0,0,0,0},
{0,1,0,0,0,0,0,0},
{0,0,1,1,1,1,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 112:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{1,1,1,1,0,1,0,0},
{0,0,1,0,0,0,1,0},
{0,1,0,0,0,1,0,0},
{1,0,0,1,1,1,0,0},
{0,0,1,0,0,1,1,0},
{0,0,0,1,1,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 113:{
      bool b[8][8] = {
{1,0,0,0,0,1,0,0},
{1,0,0,0,1,0,1,0},
{1,0,1,1,1,1,1,0},
{1,0,0,0,0,1,0,0},
{1,0,0,1,1,1,0,0},
{1,0,1,0,0,1,0,0},
{1,0,0,1,1,0,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 114:{
      bool b[8][8] = {
{1,0,0,0,0,0,0,0},
{1,0,1,1,1,1,1,0},
{1,0,0,0,1,0,0,0},
{1,0,1,1,1,1,1,0},
{1,0,0,0,1,0,0,0},
{1,0,1,1,1,1,0,0},
{1,0,1,1,1,0,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 115:{
      bool b[8][8] = {
{0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0},
{0,0,1,0,0,1,0,0},
{0,1,1,1,1,1,0,0},
{1,0,1,0,0,1,1,0},
{1,1,0,0,0,1,0,0},
{0,0,0,1,1,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 116:{
      bool b[8][8] = {
{0,0,0,0,1,0,0,0},
{0,1,0,0,1,0,0,0},
{0,1,0,1,1,1,0,0},
{0,1,1,0,1,0,1,0},
{1,0,1,1,0,0,1,0},
{1,0,1,0,0,0,1,0},
{0,1,0,1,0,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 117:{
      bool b[8][8] = {
        bool b[8][8] = {
        {0,1,0,0,1,0,0,0},
        {0,1,0,1,1,1,0,0},
        {1,1,1,0,0,0,1,0},
        {0,0,1,0,0,1,0,0},
        {0,0,1,0,0,0,0,0},
        {0,0,0,1,0,0,0,0},
        {0,0,0,1,0,0,0,0},
        {0,0,0,0,0,0,0,0}
        };
        memcpy(a, b, sizeof(b));
        break;
    }
    case 118:{
      bool b[8][8] = {
{0,1,0,1,1,0,0,0},
{0,1,1,0,0,1,0,0},
{0,1,0,0,0,1,0,0},
{0,1,0,0,0,1,0,0},
{0,0,0,0,0,1,0,0},
{0,0,0,0,1,0,0,0},
{0,0,1,1,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 119:{
      bool b[8][8] = {
{0,0,1,1,1,1,0,0},
{0,0,0,0,1,0,0,0},
{0,0,0,1,0,0,0,0},
{0,0,1,1,1,1,0,0},
{0,1,0,0,0,0,1,0},
{0,0,1,1,0,0,1,0},
{0,0,1,1,1,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 120:{
      bool b[8][8] = {
{0,0,1,0,0,0,0,0},
{0,0,1,0,1,1,0,0},
{1,1,1,1,0,1,0,0},
{0,0,1,0,0,1,0,0},
{0,1,1,0,0,1,0,0},
{1,0,1,0,0,1,0,0},
{0,0,1,0,0,0,1,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 121:{
      bool b[8][8] = {
{0,0,0,1,0,0,0,0},
{0,0,0,1,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0},
{0,1,0,1,0,0,0,0},
{0,1,0,1,0,0,1,0},
{1,0,0,0,1,1,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    case 122:{
      bool b[8][8] = {
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1},
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0}
};
memcpy(a, b, sizeof(b));
break;
    }
    default:
      break;
  }
}
